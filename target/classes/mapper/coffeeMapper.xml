<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kangpan.mapper.CoffeeMapper">

    <select id="selectAll" resultType="com.kangpan.model.Coffee">
        select
        t.id,
        t.name,
        t.price,
        t.state,
        t.coffeeDesc,
        t.create_time as createTime,
        t.update_time as updateTime,
        t.createdBy,
        t.updatedBy
        from t_coffee t
        order by t.id asc
    </select>

    <select id="select" resultType="com.kangpan.model.Coffee" parameterType="com.kangpan.model.Coffee">
        select
        t.id,
        t.name,
        t.price,
        t.state,
        t.coffeeDesc,
        t.create_time as createTime,
        t.update_time as updateTime,
        t.createdBy,
        t.updatedBy
        from t_coffee t
        <where>
        <if test="id != null and id != ''">
            AND t.id = #{id,jdbcType = BIGINT}
        </if>
        <if test="name != null and name != ''">
            AND t.name = #{name, jdbcType = VARCHAR}
        </if>
        <if test="state != null">
            AND t.state = #{state, jdbcType = INTEGER}
        </if>
        </where>
        order by t.id asc
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.kangpan.model.Coffee">
        insert into t_coffee(
        name,
        price,
        state,
        coffeeDesc,
        create_time,
        update_time,
        createdBy,
        updatedBy)
        values (#{name}, #{price}, #{state}, #{coffeeDesc}, now(), now(), 'system', 'system')
    </insert>

    <update id="update" parameterType="com.kangpan.model.Coffee">
        update t_coffee t
        <set>
            <if test="name != null and name != ''">
                t.name = #{name, jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                t.price = #{price, jdbcType=BIGINT},
            </if>
            <if test="state != null">
                t.state = #{state, jdbcType=INTEGER},
            </if>
            <if test="coffeeDesc != null and coffeeDesc != ''">
                t.coffeeDesc = #{coffeeDesc, jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                t.create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                t.update_time = #{updateTime, jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null and createdBy != ''">
                t.createdBy = #{createdBy, jdbcType=VARCHAR},
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                t.updatedBy = #{updatedBy, jdbcType=VARCHAR}
            </if>
        </set>
        where t.id = #{id, jdbcType=BIGINT};
    </update>

    <delete id="delete" parameterType="long">
        delete from t_coffee where id = #{id}
    </delete>

    <select id="batchSelect" resultType="com.kangpan.model.Coffee" parameterType="java.util.List">
        select
        t.id,
        t.name,
        t.price,
        t.state,
        t.coffeeDesc,
        t.create_time as createTime,
        t.update_time as updateTime,
        t.createdBy,
        t.updatedBy
        from t_coffee t
        <where>
            t.id in
            <trim prefix="(" suffix=")">
                <foreach collection="list" item="item"  index="index"  separator=",">
                    <if test="item.id != null">
                        #{item.id}
                    </if>
                </foreach>
            </trim>
        </where>
        order by t.update_time desc
    </select>

    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into t_coffee(
        name,
        price,
        state,
        coffeeDesc,
        create_time,
        update_time,
        createdBy,
        updatedBy)
        values
        <!--mybatis 参数映射为list @Param 可以指定入参名称-->
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.name}, #{item.price}, #{item.state}, #{item.coffeeDesc}, now(), now(), 'system', 'system')
        </foreach>
    </insert>

    <delete id="batchDelete" parameterType="long">
        delete from t_coffee where id in
        <foreach collection="array" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update t_coffee t
            <set>
                <if test="item.name != null and item.name != ''">
                    t.name = #{item.name, jdbcType=VARCHAR},
                </if>
                <if test="item.price != null">
                    t.price = #{item.price, jdbcType=BIGINT},
                </if>
                <if test="item.state != null">
                    t.state = #{item.state, jdbcType=INTEGER},
                </if>
                <if test="item.coffeeDesc != null and item.coffeeDesc != ''">
                    t.coffeeDesc = #{item.coffeeDesc, jdbcType=VARCHAR},
                </if>
                <if test="item.createTime != null">
                    t.create_time = #{item.createTime, jdbcType=TIMESTAMP},
                </if>
                <if test="item.updateTime != null">
                    t.update_time = #{item.updateTime, jdbcType=TIMESTAMP},
                </if>
                <if test="item.createdBy != null and item.createdBy != ''">
                    t.createdBy = #{item.createdBy, jdbcType=VARCHAR},
                </if>
                <if test="item.updatedBy != null and item.updatedBy != ''">
                    t.updatedBy = #{item.updatedBy, jdbcType=VARCHAR}
                </if>
            </set>
            where t.id = #{item.id, jdbcType=BIGINT};
        </foreach>
    </update>
</mapper>